from personagem import Personagem
import random

class Heroi(Personagem):
    def __init__(self, nome, idade, vida_maxima, classe='Guerreiro'):
        super().__init__(nome, idade, vida_maxima)
        self.classe = classe
        self.itens = {"po√ß√£o": 2, "kit m√©dico": 1}
        self.refens_salvos = 0
        self.status["ataque"] += self._bonus_classe()

    def _bonus_classe(self):
        return {"Guerreiro": 5, "Arqueiro": 3, "Mago": 2}.get(self.classe, 0)

    def atacar(self, alvo):
        if not self.esta_vivo():
            print(f"{self.nome} est√° inconsciente e n√£o pode atacar.")
            return
        dano_base = self.status["ataque"]
        critico = random.random() < 0.2
        dano_total = dano_base * 2 if critico else dano_base + random.randint(1, 5)
        crit_msg = " (Cr√≠tico!)" if critico else ""
        print(f"‚öîÔ∏è {self.nome} ataca {alvo.nome} com {dano_total} de dano{crit_msg}")
        alvo.receber_dano(dano_total)

    def usar_pocao(self):
        if self.itens.get("po√ß√£o", 0) > 0:
            self.itens["po√ß√£o"] -= 1
            print(f"üåø {self.nome} usou uma po√ß√£o!")
            self.curar(30)
            self.dialogar("curar")
        else:
            print(f"‚ùå {self.nome} n√£o tem mais po√ß√µes!")

    def salvar_refem(self):
        chance = random.random()
        if chance > 0.3:
            self.refens_salvos += 1
            print(f"üïäÔ∏è {self.nome} salvou um ref√©m! Total: {self.refens_salvos}")
            self.dialogar("refem")
        else:
            print(f"‚ùå {self.nome} falhou ao tentar salvar o ref√©m...")
            self.dialogar("refem")

    def dialogar(self, situacao="normal"):
        falas = {
            "normal": [
                "Eu lutarei pela justi√ßa!",
                "N√£o deixarei ningu√©m para tr√°s!",
                "Com coragem, vamos vencer!",
                "Voc√™ n√£o est√° sozinho!"
            ],
            "ataque": [
                "Toma essa!",
                "Voc√™ n√£o vai passar!",
                "Sentir√° meu poder!",
                "Ataque certeiro!"
            ],
            "defesa": [
                "N√£o ser√° f√°cil me derrotar!",
                "Estou preparado para isso!",
                "Minha defesa √© firme!",
                "Voc√™ ter√° que fazer melhor!"
            ],
            "vitoria": [
                "A justi√ßa prevaleceu!",
                "O mal foi derrotado!",
                "Vit√≥ria garantida!",
                "O bem sempre triunfa!"
            ],
            "derrota": [
                "N√£o... Ainda posso lutar...",
                "N√£o √© o fim para mim!",
                "Eu... falhei...",
                "Voltar-ei mais forte!"
            ],
            "curar": [
                "Essa po√ß√£o vai me fortalecer!",
                "Vamos recuperar as for√ßas!",
                "Hora de me curar!",
                "Uma chance para continuar!"
            ],
            "refem": [
                "Vou salvar esse inocente!",
                "Ningu√©m ficar√° para tr√°s!",
                "A liberdade √© meu dever!",
                "Ref√©m salvo, miss√£o cumprida!"
            ]
        }
        import random
        if situacao not in falas:
            situacao = "normal"
        print(f"üí¨ {self.nome} diz: \"{random.choice(falas[situacao])}\"")

    def exibir_inventario(self):
        print(f"\nInvent√°rio de {self.nome}:")
        for item, qtd in self.itens.items():
            print(f"- {item}: {qtd}")
        print()
